import { useState, useEffect } from 'react';
import Head from "next/head";
import styles from "@/styles/Dashboard.module.css";
import ModelStyles from "@/styles/Model.module.css";
import Sidebar from "./components/Sidebar";
import axios from 'axios';

export default function Dashboard() {
  const [showModal, setShowModal] = useState(false);
  const [showModal2, setShowModal2] = useState(false);
  const [OrgData, setOrgData] = useState(null);

  const token = "435k2h7637c63hg76";

  useEffect(() => {
    async function fetchData() {
      try {
        const res = await axios.post(`http://localhost:4000/api/${token}/databases/getdbnames`);
        setOrgData(res.data);
      } catch (error) {
        console.log(error);
      }
    }
    if (token) {
      fetchData();
    }

    localStorage.setItem('token', token);
  }, [token]);

  let usertoken;
  if (typeof window !== "undefined") {
    usertoken = localStorage.getItem('token');
  }



  const toggleModal = () => {
    setShowModal(!showModal);
  };

  const toggleModal2 = () => {
    setShowModal2(!showModal2);
  };

  async function createOrg() {
    const name = document.getElementById('name')?.value;
    const type = document.getElementById('orgtype')?.value;

    if (!name || !type) {
      console.log('Please provide a name and type for the organization');
      return;
    }

    const res = await axios.post('/api/createorg', {
      name: name,
      type: type,
    });

    if (res.status === 200) {
      const { data } = res;
      if (data.error) {
        console.log(data.error);
      } else {
        console.log(data);
      }
    } else {
      console.log('Error creating organization');
    }
  }

  return (
    <>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.container}>
        <nav>
          <Sidebar />
        </nav>
        <main className={styles.main}>
          <div className={styles.contentWrapper}>
            {OrgData && Array.isArray(OrgData) ? (
              OrgData?.map((data) => (
                <div className={styles.card}>
                  <div className={styles.cardTitle}>
                    <h2>Organization Data:</h2>
                  </div>
                  <div className={styles.cardBody}>
                    <p>Name: {data}</p>
                  </div>
                  <button className={styles.bubbleButton} onClick={() => window.location.href = `/dashboard/${usertoken}/${data}/manage`}> Access Organization </button>
                </div>
              ))
            ) : (
              <div className={styles.card}>
                <div className={styles.cardTitle}>
                  <h2>Create Organizations:</h2>
                </div>
                <div className={styles.cardBody}>
                  <p>
                    We see that you don't have any organizations. Create one to access and create a database.
                  </p>
                  <br />
                  <button className={styles.bubbleButton} onClick={toggleModal}>
                    Create Organization
                  </button>
                </div>
              </div>
            )}

          </div>
        </main>
      </div>

      {showModal && (
        <div className={ModelStyles.modal}>
          <div className={ModelStyles.modalContent}>
            <div className={ModelStyles.modalHeader}>
              <h2>Create a new organization:</h2>
              <button className={ModelStyles.close} onClick={toggleModal}>
                &times;
              </button>
            </div>
            <br />
            <div className={ModelStyles.modalBody}>
              <form className={ModelStyles.form}>
                <label className={ModelStyles.label} htmlFor="dorgname">Name:</label>
                <input
                  className={ModelStyles.input}
                  type="text"
                  id='name'
                  placeholder='Organization name'
                  minLength="3"
                  maxLength="20"
                />
                <br></br>
                <label className={ModelStyles.label} htmlFor="type">Type of organization:</label>
                <select
                  className={ModelStyles.input}
                  type="text"
                  id='orgtype'
                >
                  <option value="Personal">Personal</option>
                  <option value="Educational">Educational</option>
                  <option value="Startup">Startup</option>
                  <option value="Agency">Agency</option>
                  <option value="Company">Company</option>
                  <option value="N/A">N/A</option>
                </select>
              </form>
              <div className={ModelStyles.modalFooterLine}></div>
              <div className={ModelStyles.modalFooter}>
                <button className={ModelStyles.bubbleButton} onClick={toggleModal}>
                  Cancel
                </button>
                <button className={ModelStyles.bubbleButton} onClick={toggleModal && toggleModal2}>
                  Create Organization
                </button>
              </div>
            </div>
          </div>
        </div>
      )}


      {showModal2 && (
        <div className={ModelStyles.modal}>
          <div className={ModelStyles.modalContent}>
            <div className={ModelStyles.modalHeader}>
              <h2>Create a new project:</h2>
              <button className={ModelStyles.close} onClick={toggleModal}>
                &times;
              </button>
            </div>
            <br />
            <div className={ModelStyles.modalBody}>
              <form className={ModelStyles.form}>
                <label className={ModelStyles.label} htmlFor="dorgname">Project Name:</label>
                <input
                  className={ModelStyles.input}
                  type="text"
                  id='projectname'
                  placeholder='Project name'
                  minLength="3"
                  maxLength="20"
                />
                <br></br>
                <label className={ModelStyles.label} htmlFor="dorgname">Database Password:</label>
                <input
                  className={ModelStyles.input}
                  type="text"
                  id='orgdbpassword'
                  placeholder='Type in a strong password for your database'
                  minLength="3"
                  maxLength="20"
                />
                <br></br>
                <label className={ModelStyles.label} htmlFor="type">Region:</label>
                <select
                  className={ModelStyles.input}
                  type="text"
                  id='orgregion'
                >
                  <option value="Dallas">US East (Dallas)</option>
                </select>
                <br></br>
                <label className={ModelStyles.label} htmlFor="type">Pricing Plan:</label>
                <select
                  className={ModelStyles.input}
                  type="text"
                  id='plan'
                >
                  <option value="freeplan">Free - $0/month</option>
                  <option value="proplan">Pro - $25/month</option>
                </select>
              </form>
              <div className={ModelStyles.modalFooterLine}></div>
              <div className={ModelStyles.modalFooter}>
                <button className={ModelStyles.bubbleButton} onClick={toggleModal}>
                  Cancel
                </button>
                <button className={ModelStyles.bubbleButton} onClick={createOrg}>
                  Create Organization
                </button>
              </div>
            </div>
          </div>
        </div>
      )}


    </>
  );
}
